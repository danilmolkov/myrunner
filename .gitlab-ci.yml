stages:
  - linting
  - test
  - build
  - push

unit-test:
  stage: test
  image: registry.gitlab.com/danilmolkov/myrunner:stable
  script:
    - python -m pip install -r build_requirements.txt
    - myrunner --file ./test/unit.hcl unit
  tags: [myrunner]

unit-test-docker:
  stage: test
  script:
    - python -m pip install -r build_requirements.txt
    - myrunner -f ./test/unit.hcl unit_docker
  tags: [myrunner, docker]

lint:
  stage: linting
  script:
    - myrunner install_lint_tools lint
  tags: [myrunner]

markdownlint:
  stage: linting
  image: registry.gitlab.com/pipeline-components/markdownlint:latest
  script:
    - mdl --style all --warnings .

build-package:
  stage: build
  image: python:3.10
  script:
    - pip install -r  requirements.txt
    - pip install build
    - python -m build
    - pip install dist/myrunner-*-py3-none-any.whl
    - echo "Test package"
    - myrunner -f test/unit.hcl unit
  artifacts:
    paths:
      - dist/myrunner-*-py3-none-any.whl
    expire_in: "7 days"

upload-to-registry:
  stage: push
  image: python:3.10
  script:
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  only:
    - tags
  except:
    - branches

upload-stable-docker:
  stage: push
  script: myrunner docker-build-stable docker-push-stable
  tags: [docker]
  only:
    - tags
  except:
    - branches
